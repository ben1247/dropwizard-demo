<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
		 http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		 http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		 http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		 http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd">

    <context:annotation-config/>
    <context:component-scan base-package="com.zy.dropwizard" />

    <!-- 开启切面代理 -->
    <aop:aspectj-autoproxy/>

    <!-- 配置事务管理器,mybatis采用jdbc事务管理器 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="druidDataSource"/>
    </bean>
    <!-- 配置基于注解的声明式事务，默认使用注解来管理事务行为 -->
    <tx:annotation-driven transaction-manager="transactionManager"/>


    <!-- 创建SqlSessionFactory，同时指定数据源-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="druidDataSource"/>
        <property name="configLocation" value="classpath:/mybatis-config.xml"/>
        <!-- 当mybatis的xml文件和mapper接口不在相同包下时，需要用mapperLocations属性指定xml文件的路径。
         *是个通配符，代表所有的文件，**代表所有目录下 -->
        <!--<property name="mapperLocations" value="classpath:/mapper/*.xml"/>-->
    </bean>
    <!-- 扫描mapper接口，并自动创建为bean-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.zy.dropwizard.mapper"/>
    </bean>

</beans>